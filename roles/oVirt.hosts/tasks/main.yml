---
- name: Get hosts
  ovirt_hosts_facts:
    auth: "{{ ovirt_auth }}"
    pattern: "{{ hosts | map(attribute='name') | map('regex_replace', '(.*)', 'name=\\1') | list | join(' or ') }} status=installfailed"
  tags:
    - hosts
    - reinstall

- name: Reinstall hosts
  ovirt_hosts:
    auth: "{{ ovirt_auth }}"
    state: reinstalled
    name: "{{ item.name }}"
    public_key: "{{ item.password is undefined }}"
    password: "{{ item.password | default(omit) }}"
  with_items:
    - "{{ ovirt_hosts | default([]) }}"
  tags:
    - hosts
    - reinstall

- name: Add hosts
  ovirt_hosts:
    auth: "{{ ovirt_auth }}"
    state: "{{ item.state | default(omit) }}"
    name: "{{ item.name }}"
    address: "{{ item.address }}"
    cluster: "{{ item.cluster }}"
    password: "{{ item.password | default(omit) }}"
    public_key: "{{ item.public_key | default(omit) }}"
    override_iptables: true
    timeout: "{{ item.timeout | default(ovirt_hosts_add_timeout) }}"
    poll_interval: "{{ item.poll_interval | default(20) }}"
  with_items:
    - "{{ hosts | default([]) }}"
  async: "{{ ovirt_hosts_max_timeout }}"
  poll: 0
  register: add_hosts
  tags:
    - hosts

- name: Wait for hosts to be added
  async_status: "jid={{ item.ansible_job_id }}"
  register: job_result
  with_items:
    - "{{ add_hosts.results }}"
  tags:
    - hosts
  until: job_result.finished
  retries: "{{ ovirt_hosts_max_timeout // 20 }}"
  delay: 20
